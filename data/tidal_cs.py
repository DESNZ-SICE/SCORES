import timefrom generation import (OffshoreWindModel, SolarModel, OnshoreWindModel5800,TidalStreamTurbineModel)from storage import (BatteryStorageModel, HydrogenStorageModel,                      MultipleStorageAssets)from system import ElectricitySystem, ElectricitySystemGBimport csvimport numpy as npimport matplotlib.pyplot as pltimport aggregatedEVs as aggEV'''Initialise generators'''ymin = 2016ymax = 2016osw_master = OffshoreWindModel(year_min=ymin, year_max=ymax, sites=[119,174,178,209,364],                        data_path='data/150m/')# Note that the solar model is substantially slower than the wind modelss = SolarModel(year_min=ymin, year_max=ymax, sites=[17,23,24],                        data_path='data/solar/')#Pentland Firthts_p = TidalStreamTurbineModel(year_min=ymin, year_max=ymax, sites=[1126],fixed_cost=445400*0.5 ,               data_path='data/tidal/Pentland/')#Angleseyts_a = TidalStreamTurbineModel(year_min=ymin, year_max=ymax, sites=[173],fixed_cost=445400*0.5 ,               data_path='data/tidal/Anglesey/')#Solentts_s = TidalStreamTurbineModel(year_min=ymin, year_max=ymax, sites=[2046],fixed_cost=445400*0.5 ,               data_path='data/tidal/Solent/')plt.plot(ts_p.power_out[0:72])plt.plot(osw_master.power_out[0:72])plt.plot(ts_s.power_out[0:72])x= np.asarray(ts_p.power_out[0:72])+np.asarray(ts_a.power_out[0:72])+np.asarray(ts_s.power_out[0:72])plt.plot(x)'''Initialise storage'''B = BatteryStorageModel()H = HydrogenStorageModel()'''System optimisation'''# Initialise list of generators#generators = [osw1,osw2,osw3,osw4,osw5,w,s]generators = [osw_master,s,ts_p,ts_a,ts_s]# Initialise list of storagestorage = [B,H]# Initialise electricity sytem with existing GB demandes = ElectricitySystemGB(generators, storage, year_min = ymin, year_max = ymax,                         reliability = 99, strategy='ordered', start_up_time=24)start = time.time()es.fully_optimise(sum(es.demand)*0.01,fixed_capacities=False)end = time.time()es.new_analyse(filename='log/reduceratedpower.txt')print('New Method Time: ',int(end - start), 's')#es.new_analyse(filename='log/opt_results_improved_1.txt')st=int(1000)en = int(1500)es.plot_timeseries(start=st,end=en)storage[0].plot_timeseries(start=st,end=en)storage[1].plot_timeseries(start=st,end=en)                   